# Default values for postgres-database.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

namespace: "database"

image:
  registry: docker.io
  repository: postgres
  pullPolicy: IfNotPresent
  tag: "17-alpine"

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: "postgres-database"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  protocol: TCP
  type: ClusterIP
  port: 5432

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessprobe:
  exec:
    command:
      - "pg_isready"
      - "-u"
      - "{{ .values.env.postgres_user }}"
      - "-d"
      - "{{ .values.env.postgres_db }}"
  initialdelayseconds: 5
  periodseconds: 5
  timeoutseconds: 5
  failurethreshold: 5

readinessprobe:
  exec:
    command:
      - "pg_isready"
      - "-u"
      - "{{ .values.env.postgres_user }}"
      - "-d"
      - "{{ .values.env.postgres_db }}"
  initialdelayseconds: 5
  periodseconds: 5
  timeoutseconds: 5
  failurethreshold: 5

env:
  - name: POSTGRES_PASSWORD
    value: "password"
  - name: POSTGRES_USER
    value: "user"
  - name: POSTGRES_DB
    value: "db"

persistance:
  enabled: true
  size: 10Gi
  hostPath: "/home/user/apps/postgres"

migrations:
  enabled: true
  scriptPath: "./migrations/init.sql"

volumes:
  - name: postgres-data
    persistentVolumeClaim:
      claimName: postgres-pvc
  - name: init-script
    configMap:
      name: postgres-init-script

volumeMounts:
  - name: postgres-data
    mountPath: /var/lib/postgresql/data
  - name: init-script
    mountPath: /docker-entrypoint-initdb.d/create_tables.sql
    subPath: create_tables.sql

nodeSelector: {}
tolerations: []
affinity: {}
