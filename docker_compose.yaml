services:
  go-server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - SERVER_PORT=${SERVER_PORT}
      - LOGGING_LEVEL=DEBUG
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mynetwork

  postgres:
    image: postgres:17-alpine
    ports:
      - ${POSTGRES_PORT}
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - mynetwork

volumes:
  db:
    driver: local

networks:
  mynetwork:
    driver: bridge
